/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DF 0
#define MC 1
#define LW 2
#define RS 3

/ {
    combos {
        compatible = "zmk,combos";
        combo_dsklg {
            timeout-ms = <100>;
            key-positions = <24 52>;
            layers = <0>;
            bindings = <&kp LGUI>;
        };        
    };

    behaviors {
        fofunc: four_ffour {
            compatible = "zmk,behavior-mod-morph";
            label = "FOUR_FUNCFOUR";
            #binding-cells = <0>;
            bindings = <&kp N4>, <&kp F4>;
            mods = <(MOD_LALT|MOD_RALT)>;
            keep-mods = <(MOD_LALT|MOD_RALT)>;
        };
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LCTL|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL)>;
        };
        sleft: s_left {
            compatible = "zmk,behavior-mod-morph";
            label = "S_LEFT";
            #binding-cells = <0>;
            bindings = <&kp S>, <&kp LEFT>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
        fright: f_right {
            compatible = "zmk,behavior-mod-morph";
            label = "R_RIGHT";
            #binding-cells = <0>;
            bindings = <&kp F>, <&kp RIGHT>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
//       0      1     2     3      4      5                            6      7       8       9      10      11    
//   ------------------------------------------------------------------------------------------------------------
//  0|  ESC  |  1  |  2  |  3   |  4   |  5   |                     |  6   |  7    |  8    |  9   |   0   |   =   | 11
// 12|  TAB  |  Q  |  W  |  E   |  R   |  T   |                     |  Y   |  U    |  I    |  O   |   P   |   [   | 23
// 24|  SFT  |  A  |  S  |  D   |  F   |  G   |  RESET  |  | RESET  |  H   |  J    |  K    |  L   |   ;   | ' SFT | 37
// 38|  CTRL |  Z  |  X  |  C   |  V   |  B   | MUTE RS |  | PLAY   |  N   |  M    |  ,    |  .   |   /   | - CTRL| 51
// 52                    |ENT RS|  ALT | SPACE|DELETE LW|  |ENTER RS| BSPC |  ] LW | RGUI  |                        59
            bindings = <
&gresc    &kp N1 &kp N2   &kp N3      &fofunc   &kp N5                               &kp N6    &kp N7      &kp N8    &kp N9   &kp N0   &kp EQUAL
&kp TAB   &kp Q  &kp W    &kp E       &kp R     &kp T                                &kp Y     &kp U       &kp I     &kp O    &kp P    &kp LBKT
&kp LSHFT &kp A  &sleft   &kp D       &fright   &kp G      &sys_reset     &sys_reset &kp H     &kp J       &kp K     &kp L    &kp SEMI &mt RSHFT SQT
&kp LCTRL &kp Z  &kp X    &kp C       &kp V     &kp B      &lt RS C_MUTE  &kp C_PP   &kp N     &kp M       &kp COMMA &kp DOT  &kp FSLH &mt RCTRL MINUS
                          &lt RS RET  &kp LALT  &kp SPACE  &lt LW DEL     &lt RS RET &kp BSPC  &lt LW RBKT &kp LGUI  
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        macos_layer {
            label = "macOs";
//       0      1     2     3      4      5                            6      7       8       9      10      11    
//   ------------------------------------------------------------------------------------------------------------
//  0|  ESC  |  1  |  2  |  3   |  4   |  5   |                     |  6   |  7    |  8    |  9   |   0   |   =   | 11
// 12|  TAB  |  Q  |  W  |  E   |  R   |  T   |                     |  Y   |  U    |  I    |  O   |   P   |   [   | 23
// 24|  SFT  |  A  |  S  |  D   |  F   |  G   |  RESET  |  | RESET  |  H   |  J    |  K    |  L   |   ;   | ' SFT | 37
// 38|  CMND |  Z  |  X  |  C   |  V   |  B   | MUTE RS |  | PLAY   |  N   |  M    |  ,    |  .   |   /   | - CMND| 51
// 52                    | OPTN | CTRL | SPACE|DELETE LW|  |ENTER RS| BSPC |  ] LW | OPTN  |                        59
            bindings = <
&gresc   &kp N1 &kp N2   &kp N3     &fofunc   &kp N5                               &kp N6    &kp N7      &kp N8    &kp N9   &kp N0   &kp EQUAL
&kp TAB   &kp Q  &kp W    &kp E      &kp R     &kp T                                &kp Y     &kp U       &kp I     &kp O    &kp P    &kp LBKT
&kp LSHFT &kp A  &kp S    &kp D      &kp F     &kp G      &sys_reset     &sys_reset &kp H     &kp J       &kp K     &kp L    &kp SEMI &mt RSHFT SQT
&kp LGUI  &kp Z  &kp X    &kp C      &kp V     &kp B      &lt RS C_MUTE  &kp C_PP   &kp N     &kp M       &kp COMMA &kp DOT  &kp FSLH &mt LGUI MINUS
                          &kp LCTRL  &kp LALT  &kp SPACE  &lt LW DEL     &lt RS RET &kp BSPC  &lt LW RBKT &kp LALT  
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            label = "Lower";
// ------------------------------------------------------------------------------------------------------------
// | `     |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |       |  !  | HOME|   ^  |  END |  %   |                   | VOL^ |  PGUP |  INS  |  ^   |  PSCR |   -   |
// |       |  #  |  <- |   v  | ->   |  $   |        |  |       | VOLv |    <- |   ^   |  ->  |   ~   |   _   |
// |       |  @  |  -  |  (   |  )   |  &   |        |  |       | MUTE |  PGDN |   v   |  :   |   *   |   \|   |
//                     |  F11 |      |      |        |  |       |      |       |  F12  |       
            bindings = <
&kp GRAVE  &kp F1    &kp F2    &kp F3      &kp F4     &kp F5                     &kp F6        &kp F7     &kp F8    &kp F9     &kp F10   &kp PLUS
&kp CAPS   &kp EXCL  &kp HOME  &kp UP      &kp END    &kp PRCNT                  &kp C_VOL_UP  &kp PG_UP  &kp INS   &kp CARET  &kp PSCRN &kp MINUS
&trans     &kp HASH  &kp LEFT  &kp DOWN    &kp RIGHT  &kp DLLR  &trans   &trans  &kp C_VOL_DN  &kp LEFT   &kp UP    &kp RIGHT  &kp TILDE &kp UNDER
&trans     &kp AT    &kp MINUS &kp LBRC    &kp RBRC   &kp AMPS  &trans   &trans  &kp C_MUTE    &kp PG_DN  &kp DOWN  &kp COLON  &kp STAR  &kp BSLH
                               &kp F11     &trans     &trans    &trans   &trans  &trans        &trans     &kp F12
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_NEXT C_PREV>;
        };

        raise_layer {
            label = "Raise";
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |OUTTOG|OUTUSB| OUTBT |      |       |       |
// |macOS| INS  | PSCR | GUI   | RESET |      |                | PGUP |      |   ^   |      |       |       |
// |CPSLK| ALT  | CTRL | SHIFT | FLASH | CAPS |      |  |      | PGDN |   <- |   v   |  ->  |  DEL  | BSPC  |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |  |>  |  <|<| | |>|> |       |       |
//                     |       |       |      |      |  |      |      |      |       |       
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                    &out OUT_TOG  &out OUT_USB  &out OUT_BLE  &trans     &sys_reset &bootloader
&tog MC    &kp INS      &kp PSCRN    &kp K_CMENU  &sys_reset   &trans                          &kp PG_UP     &trans        &kp UP        &trans     &kp N0  &trans
&kp CAPS   &kp LALT     &kp LCTRL    &kp LSHFT    &bootloader  &kp CLCK     &trans   &trans    &kp PG_DN     &kp LEFT      &kp DOWN      &kp RIGHT  &kp DEL &kp BSPC
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans       &trans   &trans    &trans        &kp C_PP      &kp C_PREV    &kp C_NEXT &trans  &trans
                                     &trans       &trans       &trans       &trans   &trans    &trans        &trans        &trans   
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
